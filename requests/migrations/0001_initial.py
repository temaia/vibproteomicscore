# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2019-02-12 12:07
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Main_analysis_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('shotgun analysis', 'shotgun analysis'), ('affinity-purification MS (AP-MS)', 'affinity-purification MS (AP-MS)'), ('PTM analysis', 'PTM analysis'), ('Virotrap', 'Virotrap'), ('protein gel band analysis', 'protein gel band analysis'), ('protein mass determination', 'protein mass determination'), ('PRM', 'PRM'), ('SRM', 'SRM'), ('DIA', 'DIA'), ('other', 'other')], max_length=142, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Project_title', models.CharField(max_length=50)),
                ('Project_summary', models.CharField(max_length=300)),
                ('Main_analysis_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('shotgun analysis', 'shotgun analysis'), ('affinity-purification MS (AP-MS)', 'affinity-purification MS (AP-MS)'), ('PTM analysis', 'PTM analysis'), ('Virotrap', 'Virotrap'), ('protein gel band analysis', 'protein gel band analysis'), ('protein mass determination', 'protein mass determination'), ('PRM', 'PRM'), ('SRM', 'SRM'), ('DIA', 'DIA'), ('other', 'other')], max_length=142, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('Data_analysis', models.BooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Project_ID', models.CharField(blank=True, max_length=12, null=True)),
                ('Email', models.EmailField(blank=True, max_length=120, null=True)),
                ('Name', models.CharField(max_length=120, null=True)),
                ('Group_leader', models.CharField(max_length=120, null=True)),
                ('Affiliation', models.CharField(choices=[('UGent-VIB', 'UGent-VIB'), ('UGent-CRIG', 'UGent-CRIG'), ('UGent', 'UGent'), ('KULeuven-VIB', 'KULeuven-VIB'), ('KULeuven', 'KULeuven'), ('UAntwerpen-VIB', 'UAntwerpen-VIB'), ('UAntwerpen', 'UAntwerpen'), ('VUB-VIB', 'VUB-VIB'), ('VUB', 'VUB'), ('Uhasselt-VIB', 'UHasselt-VIB'), ('Uhasselt', 'UHasselt'), ('Other', 'Other')], max_length=50, null=True)),
                ('Other_institution', models.CharField(blank=True, max_length=60, null=True)),
                ('Address', models.CharField(max_length=300, null=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
